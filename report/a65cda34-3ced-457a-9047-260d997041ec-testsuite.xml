<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1573999819231" stop="1573999849564">
  <name>test06_app_search</name>
  <labels/>
  <test-cases>
    <test-case start="1573999819231" status="broken" stop="1573999849564">
      <name>TestAppSearch.test_search_channel_and_title</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;class 'test06_app_search.TestAppSearch'&gt;

    def setup_class(self):
        # 获取driver对象
        self.driver = Driver.get_driver_app()
        # 实例化PageIn对象
        self.page_in = PageIn(self.driver)
        # 调用登录方法
&gt;       self.page_in.page_get_PageAppLogin.page_login_success()

scripts\test06_app_search.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page\page_app_login.py:37: in page_login_success
    self.page_input_phone(phone)
page\page_app_login.py:10: in page_input_phone
    self.base_input(page.page_app_phone, phone)
base\base.py:20: in base_input
    element = self.base_find_element(loc)
base\base.py:15: in base_find_element
    return WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll).until(lambda x: x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="e553acd7-c63a-40d8-9765-ad8febd13649")&gt;, method = &lt;function Base.base_find_element.&lt;locals&gt;.&lt;lambda&gt; at 0x00FCDD68&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

e:\python\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="214888-MainThread"/>
        <label name="host" value="SC-201907121619"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
